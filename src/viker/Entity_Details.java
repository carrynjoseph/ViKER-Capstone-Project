package viker;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 * Contains Entity Detail - used for displaying the details such as name, identifiers/keys,
 * attributes, cardinality, and relationships
 *
 * @author Kouthar Dollie
 * @author Carryn Joseph
 * @author Matthew Coombe
 * @version 1.1 - 06 September 2019
 */
public class Entity_Details extends javax.swing.JFrame {

    private String name;
    private Transformation t;

    /**
     * Creates new form Entity_Details
     */
    public Entity_Details(String entityName, Transformation tr) {
        initComponents();
        name = entityName;
        t = tr;
        displayDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entity_label = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        details_table = new javax.swing.JTable();
        close_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        entity_label.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        entity_label.setText("Entity Details");

        details_table.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{

                }
        ));
        details_table.setColumnSelectionAllowed(true);
        details_table.setEnabled(false);
        jScrollPane1.setViewportView(details_table);
        details_table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        close_button.setText("Close");
        close_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                close_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(entity_label, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 564, Short.MAX_VALUE))
                                        .addComponent(jScrollPane1)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(close_button)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(entity_label, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(close_button)
                                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void close_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_close_buttonActionPerformed
        this.dispose();
    }//GEN-LAST:event_close_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Entity_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Entity_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Entity_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Entity_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Entity_Details("", new Transformation()).setVisible(true);
            }
        });
    }

    /**
     * Displays details of an entity in the Entity Transformation Log.
     */
    private void displayDetails() {

        DefaultTableModel model = (DefaultTableModel) details_table.getModel();
        String[] columnNames = new String[2];
        columnNames[0] = "Item";
        columnNames[1] = "Details";

        model.setColumnIdentifiers(columnNames);
        ArrayList<Entity> entities = t.getEntities();
        Entity e = new Entity("", "", "");

        for (Entity e1 : entities) {
            if (e1.getEntityName().equals(name)) {
                e = e1;
            }
        }

        Object[] tableContent = new Object[6];
        tableContent[0] = e.getEntityName();
        tableContent[1] = e.getEntityType();
        tableContent[2] = e.getAttributes().getPrimaryKeys();

        tableContent[3] = e.getAttributes().getForeignKeys();
        tableContent[4] = e.getAttributes().getOtherAttributes();
        tableContent[5] = t.getRelationships();
        Object[] name = new Object[2];

        name[0] = "Name: ";
        name[1] = tableContent[0];
        model.addRow(name);
        Object[] type = new Object[2];

        type[0] = "Type: ";
        type[1] = tableContent[1];
        model.addRow(type);
        Object[] primaryKeys = new Object[2];

        primaryKeys[0] = "Primary Keys: ";
        primaryKeys[1] = tableContent[2].toString();
        model.addRow(primaryKeys);
        Object[] foreignKeys = new Object[2];

        if (type[1].equals("weak")) {
            foreignKeys[0] = "Foreign Keys: ";
            foreignKeys[1] = tableContent[3].toString();
            model.addRow(foreignKeys);
        }

        Object[] otherKeys = new Object[2];
        otherKeys[0] = "Other attributes: ";
        otherKeys[1] = tableContent[4].toString();
        model.addRow(otherKeys);

        Object[] relations = new Object[2];
        relations[0] = "Related to: ";
        relations[1] = "";

        for (Relationship r : t.getRelationships()) {
            ArrayList<Entity> rEntities = r.getEntities();
            if (rEntities.contains(e)) {
                for (Entity e2 : rEntities) {
                    if (!e2.equals(e)) {
                        if (relations[1] != "") {

                            relations[1] += ", " + e2.getEntityName();


                        } else {

                            relations[1] += e2.getEntityName();

                        }
                    }
                }

            }

        }

        model.addRow(relations);
        Object[] cardinalities = new Object[2];
        cardinalities[0] = "Cardinalities: ";
        cardinalities[1] = "";

        for (Relationship r : t.getRelationships()) {

            if (r.getCardinalities() != null) {
                ArrayList<Entity> rEntities = r.getEntities();
                if (rEntities.contains(e)) {
                    for (Entity e2 : rEntities) {
                        if (!e2.equals(e)) {

                            if (cardinalities[1] != "") {

                                int position = rEntities.indexOf(e2);
                                String[][] cardList = r.getCardinalities();
                                cardinalities[1] += ", " + cardList[position][1] + " > " + e2.getEntityName();

                            } else {

                                int position = rEntities.indexOf(e2);
                                String[][] cardList = r.getCardinalities();
                                cardinalities[1] += cardList[position][1] + " > " + e2.getEntityName();
                            }
                        }
                    }
                }
            }
        }

        model.addRow(cardinalities);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton close_button;
    private javax.swing.JTable details_table;
    private javax.swing.JLabel entity_label;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
