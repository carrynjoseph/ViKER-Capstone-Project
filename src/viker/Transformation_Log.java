package viker;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
//import res.Transformation_Model;
import viker.Entity;
import viker.Entity_Details;
import viker.VikerUI;

/**
 * Represents the Transformation Log
 * <p>
 * GUI elements to display all the details of the entities that are stored in the system.
 * </p>
 *
 * @author Kouthar Dollie
 * @author Carryn Joseph
 * @author Matthew Coombe
 * @version 1.1 - 06 September 2019
 */
public class Transformation_Log extends javax.swing.JFrame {

    private VikerUI vkForm;
    private Entity_Details details;

    /**
     * Creates new form Transformation_Log
     */
    public Transformation_Log(VikerUI vk) {

        initComponents();
        vkForm = vk;
        setUpEntitiesList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        log_label = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        entityTable = new javax.swing.JTable();
        back_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        log_label.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        log_label.setText("Transformation Log");

        entityTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "Entity Name"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                    false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        entityTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                entityTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(entityTable);

        back_button.setText("Back");
        back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(back_button)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(log_label, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(log_label, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(back_button)
                                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_buttonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_back_buttonActionPerformed

    private void entityTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_entityTableMouseClicked
        // TODO add your handling code here:
        if (details != null) {
            details.dispose();
        }

        String name = (String) entityTable.getModel().getValueAt(entityTable.getSelectedRow(), 0);
        details = new Entity_Details(name, vkForm.getT());
        details.setLocation(650, 300);
        details.setVisible(true);


    }//GEN-LAST:event_entityTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transformation_Log.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transformation_Log.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transformation_Log.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transformation_Log.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VikerUI vk = new VikerUI();
                //Transformation_Model t = new Transformation_Model(vk);
                new Transformation_Log(vk).setVisible(true);
            }
        });
    }

    /**
     * Accessor for Entity details
     *
     * @return - details as Entity_Details object
     */
    public Entity_Details getDetails() {
        return details;
    }

    /**
     * Create a well formatted table of entities for transformation log
     */
    private void setUpEntitiesList() {

        DefaultTableModel model = (DefaultTableModel) entityTable.getModel();
        String[] columnName = new String[1];
        columnName[0] = "Enitity Name";
        model.setColumnIdentifiers(columnName);

        ArrayList<Entity> entities = vkForm.getT().getEntities();
        ArrayList<String> entityNames = new ArrayList<>();

        for (Entity e : entities) {

            entityNames.add(e.getEntityName());
        }

        Object[] tableContent = entityNames.toArray();

        for (int i = 0; i < tableContent.length; i++) {

            Object[] row = new Object[1];
            row[0] = tableContent[i];
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back_button;
    private javax.swing.JTable entityTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel log_label;
    // End of variables declaration//GEN-END:variables
}
